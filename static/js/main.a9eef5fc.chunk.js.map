{"version":3,"sources":["Canvas.js","ImageUpload.js","Output.js","App.js","index.js"],"names":["Canvas","setCanvas","width","height","border","margin","justifyContent","alignItems","canvasWidth","canvasHeight","onChange","canvas","drawing","hideGrid","brushRadius","Imageupload","image","setImage","useState","imageName","setImageName","padding","flexDir","wrap","w","maxW","type","id","name","accept","style","display","event","URL","createObjectURL","target","files","mx","onClick","undefined","leftIcon","Delete","colorScheme","document","getElementById","click","Attachment","Output","imageInput","canvasInput","output","Tesseract","recognize","then","data","console","log","App","direction","minH","ImageUpload","ReactDOM","render"],"mappings":"kMA8BeA,EAzBA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAKhB,OACE,cAAC,IAAD,CACEC,MAAM,QACNC,OAAO,QACPC,OAAO,iBACPC,OAAO,MACPC,eAAe,SACfC,WAAW,SANb,SAQE,cAAC,IAAD,CACEC,YAAY,QACZC,aAAa,QACbC,SAfe,SAAAC,GACnBV,EAAUU,EAAOA,OAAOC,UAepBC,UAAU,EACVC,YAAa,O,6CC+BNC,MAlDf,YAA2C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAAY,EACNC,mBAAS,IADH,mBACjCC,EADiC,KACtBC,EADsB,KAMxC,OACE,eAAC,IAAD,CACEC,QAAQ,OACRC,QAAQ,MACRC,KAAK,OACLjB,eAAe,SACfC,WAAW,SACXiB,EAAE,OACFC,KAAK,QAPP,UASE,uBACEC,KAAK,OACLC,GAAG,YACHC,KAAK,MACLC,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClBrB,SApBe,SAAAsB,GACnBf,EAASgB,IAAIC,gBAAgBF,EAAMG,OAAOC,MAAM,KAChDhB,EAAaY,EAAMG,OAAOC,MAAM,GAAGR,SAoBhCZ,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAMqB,GAAG,OAAT,SAAiBlB,IACjB,cAAC,IAAD,CACEmB,QAAS,kBAAMrB,OAASsB,IACxBC,SAAU,cAACC,EAAA,EAAD,IACVC,YAAY,MAHd,6BASF,cAAC,IAAD,CACEJ,QAAS,WACPK,SAASC,eAAe,aAAaC,SAEvCL,SAAU,cAACM,EAAA,EAAD,IACVJ,YAAY,OALd,8B,iBChBOK,MAnBf,YAA0C,EAAzBC,WAAyB,EAAdC,YAAe,IAAD,EAEZ/B,mBAAS,eAFG,mBAEjCgC,EAFiC,KAUxC,OAVwC,KAGxCC,IAAUC,UACR,qDACA,OAEAC,MAAK,SAACC,GACNC,QAAQC,IAAIF,MAGZ,cAAC,IAAD,UACE,cAAC,IAAD,UACGJ,OCDMO,MAZf,WAAgB,IAAD,EACavC,qBADb,mBACNF,EADM,KACCC,EADD,OAEeC,qBAFf,mBAENP,EAFM,KAEEV,EAFF,KAGb,OACE,eAAC,IAAD,CAAMyD,UAAU,SAASpD,eAAe,aAAakB,EAAE,OAAOmC,KAAK,QAAQpD,WAAW,SAAtF,UACE,cAAC,EAAD,CAAQN,UAAaA,IACrB,cAAC2D,EAAD,CAAa5C,MAASA,EAAOC,SAAUA,IACvC,cAAC,EAAD,CAAQ+B,WAAYhC,EAAOiC,YAAatC,QCR9CkD,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,EAAD,SAGJnB,SAASC,eAAe,W","file":"static/js/main.a9eef5fc.chunk.js","sourcesContent":["// file to contain the canvas for DRAWING\r\nimport { Flex } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport CanvasDraw from 'react-canvas-draw';\r\n\r\nconst Canvas = ({ setCanvas }) => {\r\n  // canvas with drawing is canvas with z-index 11\r\n  const handleChange = canvas => {\r\n    setCanvas(canvas.canvas.drawing);\r\n  };\r\n  return (\r\n    <Flex\r\n      width=\"810px\"\r\n      height=\"610px\"\r\n      border=\"solid 2px grey\"\r\n      margin=\"5px\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <CanvasDraw\r\n        canvasWidth=\"800px\"\r\n        canvasHeight=\"600px\"\r\n        onChange={handleChange}\r\n        hideGrid={true}\r\n        brushRadius={4}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","// file to contain the stuff to uplaod the image\r\nimport React, { useState } from 'react';\r\nimport { HStack,Text, Flex, Input, Box, Button } from '@chakra-ui/react';\r\n\r\nimport { AttachmentIcon, DeleteIcon } from '@chakra-ui/icons';\r\nfunction Imageupload({ image, setImage }) {\r\n  const [imageName, setImageName] = useState('');\r\n  const handleChange = event => {\r\n    setImage(URL.createObjectURL(event.target.files[0]));\r\n    setImageName(event.target.files[0].name);\r\n  };\r\n  return (\r\n    <Flex\r\n      padding=\"10px\"\r\n      flexDir=\"row\"\r\n      wrap=\"wrap\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      w=\"100%\"\r\n      maxW=\"800px\"\r\n    >\r\n      <input\r\n        type=\"file\"\r\n        id=\"imgUpload\"\r\n        name=\"img\"\r\n        accept=\"image/*\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleChange}\r\n      />\r\n      {image ? (\r\n        <HStack>\r\n          <Text mx=\"40px\">{imageName}</Text>\r\n          <Button\r\n            onClick={() => setImage(undefined)}\r\n            leftIcon={<DeleteIcon />}\r\n            colorScheme=\"red\"\r\n          >\r\n            Remove Image\r\n          </Button>\r\n        </HStack>\r\n      ) : (\r\n        <Button\r\n          onClick={() => {\r\n            document.getElementById('imgUpload').click();\r\n          }}\r\n          leftIcon={<AttachmentIcon />}\r\n          colorScheme=\"teal\"\r\n        >\r\n          Upload Image\r\n        </Button>\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Imageupload;\r\n","// file to contain the output text\r\nimport React from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport {useState} from 'react';\r\nimport { Flex,Text } from '@chakra-ui/react';\r\n\r\nfunction Output({imageInput,canvasInput}) {\r\n  // switch it up depending on canvas/image\r\n  const [output, setOutput] = useState('fake output');\r\n  Tesseract.recognize(\r\n    'https://tesseract.projectnaptha.com/img/eng_bw.png',\r\n    'eng',\r\n    // { logger: m => console.log(m) }\r\n  ).then((data) => {\r\n    console.log(data)\r\n  });\r\n  return(\r\n    <Flex>\r\n      <Text>\r\n        {output}\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Output;\r\n","import React, { useState } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport Canvas from './Canvas.js';\nimport ImageUpload from './ImageUpload.js';\nimport Output from './Output.js';\n\nfunction App() {\n  const [image, setImage] = useState();\n  const [canvas, setCanvas] = useState();\n  return (\n    <Flex direction=\"column\" justifyContent=\"flex-start\" w=\"100%\" minH=\"100vh\" alignItems=\"center\">\n      <Canvas setCanvas = {setCanvas}/>\n      <ImageUpload image = {image} setImage={setImage} />\n      <Output imageInput={image} canvasInput={canvas} />\n    </Flex>\n  );\n}\n\nexport default App;\n\n  // \"homepage\":\"https://warwickhackajhl.github.io/wahack270221/\",","import { ColorModeScript,ChakraProvider } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
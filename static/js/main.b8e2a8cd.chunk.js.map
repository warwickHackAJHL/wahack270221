{"version":3,"sources":["Canvas.js","ImageUpload.js","Output.js","App.js","index.js"],"names":["Canvas","setCanvas","width","height","border","canvasWidth","canvasHeight","onChange","canvas","drawing","Imageupload","setImage","type","id","name","accept","event","URL","createObjectURL","target","files","Output","imageInput","canvasInput","useState","output","Tesseract","recognize","then","data","console","log","App","image","direction","justifyContent","ImageUpload","ReactDOM","render","document","getElementById"],"mappings":"yLAiBeA,EAZA,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAKf,OACE,cAAC,IAAD,CAAMC,MAAM,QAAQC,OAAO,QAAQC,OAAO,kBAA1C,SACE,cAAC,IAAD,CAAYC,YAAY,QAAQC,aAAa,QAAQC,SALpC,SAACC,GACpBP,EAAUO,EAAOA,OAAOC,eCObC,MAZf,YAAkC,IAAZC,EAAW,EAAXA,SAKpB,OACE,8BACE,uBAAOC,KAAK,OAAOC,GAAG,MAAMC,KAAK,MAAMC,OAAO,UAAUR,SALvC,SAACS,GACpBL,EAASM,IAAIC,gBAAgBF,EAAMG,OAAOC,MAAM,W,0BCmBrCC,MAnBf,YAA0C,EAAzBC,WAAyB,EAAdC,YAAe,IAAD,EAEZC,mBAAS,eAFG,mBAEjCC,EAFiC,KAUxC,OAVwC,KAGxCC,IAAUC,UACR,qDACA,OAEAC,MAAK,SAACC,GACNC,QAAQC,IAAIF,MAGZ,cAAC,IAAD,UACE,cAAC,IAAD,UACGJ,OCDMO,MAZf,WAAgB,IAAD,EACaR,qBADb,mBACNS,EADM,KACCtB,EADD,OAEea,qBAFf,mBAENhB,EAFM,KAEEP,EAFF,KAGb,OACE,eAAC,IAAD,CAAMiC,UAAU,SAASC,eAAe,aAAxC,UACE,cAAC,EAAD,CAAQlC,UAAaA,IACrB,cAACmC,EAAD,CAAazB,SAAUA,IACvB,cAAC,EAAD,CAAQW,WAAYW,EAAOV,YAAaf,QCR9C6B,IAASC,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b8e2a8cd.chunk.js","sourcesContent":["// file to contain the canvas for DRAWING\r\nimport { Flex } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport CanvasDraw from \"react-canvas-draw\"\r\n\r\nconst Canvas = ({setCanvas}) => {\r\n  // canvas with drawing is canvas with z-index 11\r\n  const handleChange = (canvas) =>{\r\n    setCanvas(canvas.canvas.drawing)\r\n  }\r\n  return (\r\n    <Flex width=\"800px\" height=\"600px\" border=\"solid 1px black\">\r\n      <CanvasDraw canvasWidth=\"800px\" canvasHeight=\"600px\" onChange={handleChange}/>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Canvas","// file to contain the stuff to uplaod the image\r\nimport React,{useState} from 'react'\r\n\r\nfunction Imageupload({setImage}) {\r\n  // const [image,setImage] = useState()\r\n  const handleChange = (event) =>{\r\n    setImage(URL.createObjectURL(event.target.files[0]))\r\n  }\r\n  return (\r\n    <div>\r\n      <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" onChange={handleChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Imageupload\r\n","// file to contain the output text\r\nimport React from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport {useState} from 'react';\r\nimport { Flex,Text } from '@chakra-ui/react';\r\n\r\nfunction Output({imageInput,canvasInput}) {\r\n  // switch it up depending on canvas/image\r\n  const [output, setOutput] = useState('fake output');\r\n  Tesseract.recognize(\r\n    'https://tesseract.projectnaptha.com/img/eng_bw.png',\r\n    'eng',\r\n    // { logger: m => console.log(m) }\r\n  ).then((data) => {\r\n    console.log(data)\r\n  });\r\n  return(\r\n    <Flex>\r\n      <Text>\r\n        {output}\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Output;\r\n","import React, { useState } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport Canvas from './Canvas.js';\nimport ImageUpload from './ImageUpload.js';\nimport Output from './Output.js';\n\nfunction App() {\n  const [image, setImage] = useState();\n  const [canvas, setCanvas] = useState();\n  return (\n    <Flex direction=\"column\" justifyContent=\"flex-start\">\n      <Canvas setCanvas = {setCanvas}/>\n      <ImageUpload setImage={setImage} />\n      <Output imageInput={image} canvasInput={canvas} />\n    </Flex>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}